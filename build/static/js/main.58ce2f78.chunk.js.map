{"version":3,"sources":["testdata.js","components/Header/Header.js","components/Kulukortti/Kulukortti.js","components/Content/Content.js","components/buttons/index.js","components/Items/Items.js","components/Stats/Stats.js","components/Settings/Settings.js","components/Menu/Menu.js","components/ItemForm/ItemForm.js","components/AddItem/AddItem.js","components/EditItem/EditItem.js","App.js","serviceWorker.js","index.js"],"names":["testdata","id","tyyppi","summa","kilometrit","kulupaiva","Header","props","react_default","a","createElement","className","Kulukortti","keskiarvo","moment","data","kausi","kaudenalku","kaudenloppu","format","paivat","diff","toFixed","react_router_dom","to","KeyboardArrowRight_default","Content","children","classNames","classnames","join","Button","_ref","_ref$className","primary","secondary","Object","objectWithoutProperties","assign","type","FloatingButton","_ref2","_ref2$className","buttons_Button","Items","rows","map","invoice","components_Kulukortti_Kulukortti","key","components_Content_Content","buttons_FloatingButton","Stats","Settings","selectList","item","onSubmit","event","preventDefault","kulutyyppi","target","elements","value","onFormSubmit","name","Menu","ViewList_default","nativeColor","Timeline_default","icons_Settings_default","Motorcycle_default","ItemForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleInputChange","bind","assertThisInitialized","handleSubmit","handleCancel","handleDeleteItem","checked","setState","objectSpread","defineProperty","history","goBack","console","log","parseFloat","uuid","v4","push","onDeleteItem","htmlFor","onChange","step","size","onClick","React","Component","withRouter","AddItem","components_ItemForm_ItemForm","EditItem","index","findIndex","match","params","itemData","App","handleFormSubmit","handleSelectListForm","newdata","storeddata","slice","sort","b","aDate","Date","getTime","newitem","filter","_this2","components_Header_Header","react_router","path","exact","render","Items_Items","component","components_Settings_Settings","components_AddItem_AddItem","components_EditItem_EditItem","components_Menu_Menu","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58ce2f78.chunk.js","sourcesContent":["//testidatan luonti\nconst testdata = [\n    { id: \"1\",\n    tyyppi: 'Polttoaine', \n    summa: 15.50,\n    kilometrit: '26000',\n    kulupaiva: '2019-06-01'},\n    { id: \"2\",\n    tyyppi: 'Huolto', \n    summa: 350,\n    kilometrit: '24400',\n    kulupaiva: '2019-05-24'},\n    { id: \"3\",\n    tyyppi: 'Polttoaine', \n    summa: 12.25,\n    kilometrit: '24152',\n    kulupaiva: '2019-05-13'},\n    { id: \"4\",\n    tyyppi: 'Polttoaine', \n    summa: 10.82,\n    kilometrit: '24001',\n    kulupaiva: '2019-05-10'},\n\n];\n\nexport default testdata;","import React from 'react';\n\n//tuodaan tyylimäärittelyt\nimport './Header.css';\n\n//luodaan headerin tiedot, esim. logo\nfunction Header(props) {\n    return (\n      <div className=\"header\">\n        <h1>BIKERY</h1>\n      </div>\n    );\n}\n\nexport default Header;","import React from 'react';\n\n//tuodaan käytettävät kirjastot\nimport moment from 'moment';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport { Link } from 'react-router-dom';\n\n//tuodaan tyylimäärittely\nimport './Kulukortti.css';\n\n//luodaan logiikka ja tulostus kulukortille, vaatii vielä tarkennusta ja korjausta\nfunction Kulukortti(props) {\n\n    let kulupaiva = moment(props.data.kulupaiva);\n    let kausi = \"\";\n    let keskiarvo;\n\n    if (props.data.kaudenalku && props.data.kaudenloppu) {\n      let kaudenalku = moment(props.data.kaudenalku);\n      let kaudenloppu = moment(props.data.kaudenloppu);\n      kausi = kaudenalku.format(\"MM, YYYY\");\n      let paivat = kaudenloppu.diff(kaudenalku, 'days');\n      keskiarvo = props.data.summa / paivat * 30;\n    }\n\n    return (\n      <div className=\"kulukortti\">\n        <div className=\"kulukortti__ryhma\">\n            <div className=\"kulukortti__rivi\">\n              <div className=\"kulukortti__tyyppi\">{props.data.tyyppi}</div>\n              <div className=\"kulukortti__summa\">{props.data.summa.toFixed(2)} €</div>\n            </div>\n            <div className=\"kulukortti__rivi\">\n              <div className=\"kulukortti__kulupaiva\">{kulupaiva.format(\"D.M.Y\")}</div>\n              <div className=\"kulukortti__ajanjakso\">{kausi}</div>\n            </div>\n\n            <div className=\"kulukortti__rivi\">\n            <div className=\"kulukortti__keskiarvo\">{ keskiarvo ? keskiarvo.toFixed(2) + \" € / kk\" : \"\"}</div>\n            <div className=\"kulukortti__kilometrit\">{props.data.kilometrit + \" km\"}</div>\n            </div>\n          </div>\n        <div className=\"kulukortti__linkki\">\n          <Link to={\"/edit/\" + props.data.id}><KeyboardArrowRight /></Link>\n        </div>\n      </div>\n    );  \n}\n\nexport default Kulukortti;","import React from 'react';\n\nimport './Content.css';\n\nfunction Content(props) {\n    return (\n      <div className=\"content\">\n        { props.children }\n      </div>\n    );\n}\n\nexport default Content;","import React from 'react';\n\n//tuodaan buttonien tyylimäärittelyt\nimport './buttons.css';\n\n//määritellään secondary ja primary-buttoneille arvot\nconst classNames = classnames => classnames.join(\" \");\n\nconst Button = ({ className = \"\", primary, secondary, ...props}) => {\n  return (\n    <button \n      type=\"button\" \n      className={classNames([\n          \"button\",\n          className,\n          primary ? \"button--primary\" : \"\",\n          secondary ? \"button--secondary\" : \"\"\n      ])}\n      {...props} />    \n  );\n}\n\nconst FloatingButton = ({className = \"\", ...props}) => {\n    return (\n      <Button \n        className={classNames([\"button--floating\", className])}\n        {...props} />\n    );\n}\n\nexport { Button as default, Button, FloatingButton }","import React from 'react';\n\n//tuodaan käytettävät kirjastot\nimport { Link } from 'react-router-dom';\n\n//tuodaan käytettävät komponentit\nimport Kulukortti from '../Kulukortti/Kulukortti';\nimport Content from '../Content/Content';\nimport { FloatingButton } from '../buttons';\n\n//mapataan itemit ja luodaan kelluva lisäys-button\nfunction Items(props) {\n\n    let rows = props.data.map(invoice => {\n        return (\n          <Kulukortti data={invoice} key={invoice.id} />\n        );\n      }\n    );\n\n    return (\n      <Content>\n        {rows}\n        <Link to=\"/add\"><FloatingButton primary>+</FloatingButton></Link>\n      </Content>\n    );\n}\n\nexport default Items;","import React from 'react';\n\n//tuodaan käytettävät komponentit\nimport Content from '../Content/Content';\n\n//luodaan logiikka ja tulostus statseille\nfunction Stats(props) {\n  return (\n      <Content>\n        <h2>Stats</h2>\n      </Content>\n  \n    );\n  }\n\nexport default Stats;","import React from 'react';\n\n//tuodaan käytettävät komponentit\nimport Button from '../buttons';\nimport Content from '../Content/Content';\n\n//tuodaan tyylimäärittelyt\nimport './Settings.css';\n\n//luodaan käsittelijä ja tulostus kulutyyppien hallinnoinnille\nfunction Settings(props) {\n\n    const handleSubmit = function(event) {\n      event.preventDefault();\n      let kulutyyppi = event.target.elements.kulutyyppi.value;\n      props.onFormSubmit(kulutyyppi);\n      event.target.elements.kulutyyppi.value = \"\";\n    }\n\n    return (\n      <Content>\n        <div className=\"settings\">\n          <h2>Settings</h2>\n          <h3>Kulutyypit </h3>\n          <div className=\"settings__items\">\n            {props.selectList.map(item => <div key={item}>{item}</div>)}\n\n            <form onSubmit={handleSubmit}>\n              <div className=\"settingsForm\">\n                <input type=\"text\" name=\"kulutyyppi\" />\n                <Button type=\"submit\" primary>LISÄÄ</Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </Content>\n  \n    );\n  }\n\n  export default Settings;","import React from 'react';\n\n//tuodaan käytettävät kirjastot\nimport { Link } from 'react-router-dom';\nimport Motorcycle from '@material-ui/icons/Motorcycle';\nimport ViewList from '@material-ui/icons/ViewList';\nimport Timeline from '@material-ui/icons/Timeline';\nimport Settings from '@material-ui/icons/Settings';\n\n//tuodaan tyylimäärittelyt\nimport './Menu.css';\n\n//luodaan Menu-reititykset\nfunction Menu(props) {\n    return (\n       <div className=\"menu\">\n        <Link to=\"/\"><div className=\"menu__nappi\"><ViewList nativeColor='#fff'/></div></Link>\n        <Link to=\"/stats\"><div className=\"menu__nappi\"><Timeline nativeColor='#fff'/></div></Link>\n        <Link to=\"/settings\"><div className=\"menu__nappi\"><Settings nativeColor='#fff'/></div></Link>\n        <Link to=\"/\"><div className=\"menu__nappi\"><Motorcycle nativeColor='#fff'/></div></Link>\n       </div>\n    );\n  }\n\nexport default Menu;","import React from 'react';\n\n//tuodaan käytettävät kirjastot\nimport { withRouter } from 'react-router';\nimport uuid from 'uuid'; \nimport Button from '../buttons';\n\n//tuodaan tyylimäärittelyt\nimport './ItemForm.css';\n\n//luodaan luokka ja käsittelijät lomakkeelle\nclass ItemForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const data = props.data ? props.data : {\n                tyyppi: \"\",\n                summa: \"\",\n                kilometrit: \"\",\n                kulupaiva: \"\",\n             }\n        this.state = {\n            data: data\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.handleDeleteItem = this.handleDeleteItem.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n    \n        this.setState({\n          data: {\n              ...this.state.data,\n              [name]: value\n          }\n        });\n    }\n\n    handleCancel(event) {\n        event.preventDefault();\n        this.props.history.goBack();\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(\"lähetä lomake\");\n        let data = Object.assign({}, this.state.data);\n        data.summa = parseFloat(data.summa);\n        data.id = data.id ? data.id : uuid.v4();\n        this.props.onFormSubmit(data);\n        this.props.history.push(\"/\");\n    }\n\n    handleDeleteItem(event) {\n      event.preventDefault();\n      this.props.onDeleteItem(this.state.data.id);\n      this.props.history.push(\"/\");\n    }\n\n    //renderöidään lomakkeen tiedot\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n\n            <div className=\"itemform\">          \n  \n              <div className=\"itemform__row\">\n                <div>\n                  <label htmlFor=\"name\">Kulutyyppi</label>\n                  <select name=\"tyyppi\" value={this.state.data.tyyppi} onChange={this.handleInputChange}>\n\n                    {this.props.selectList.map(item => <option value={item} key={item}>{item}</option>)}\n\n                  </select>                \n                </div>\n              </div>\n  \n              <div className=\"itemform__row\">\n                <div>\n                  <label htmlFor=\"summa\">Summa</label>\n                  <input type=\"number\" name=\"summa\" step=\"0.01\" value={this.state.data.summa} onChange={this.handleInputChange} />\n                </div>\n                <div>\n                  <label htmlFor=\"kulupaiva\">Kulupäivä</label>\n                  <input type=\"date\" name=\"kulupaiva\" size=\"10\" value={this.state.data.kulupaiva} onChange={this.handleInputChange} />\n                </div>\n              </div>\n              \n              <div className=\"itemform__row\">\n                <div>\n                  <label htmlFor=\"kilometrit\">Kilometrit</label>\n                  <input type=\"text\" name=\"kilometrit\" value={this.state.data.kilometrit} onChange={this.handleInputChange}/>\n                </div>\n              </div>\n  \n              <div className=\"itemform__row\">\n                <div>\n                  <Button onClick={this.handleCancel}>PERU</Button>\n                </div>\n                <div>\n                  <Button type=\"submit\" secondary>{this.state.data.id ? \"TALLENNA\" : \"LISÄÄ\"}</Button>                  \n                </div>\n              </div>\n  \n              {this.props.onDeleteItem ? <Button onClick={this.onDeleteItem}>POISTA</Button> : \"\"}\n\n            </div>  \n  \n          </form>\n        );\n    }\n\n}\n\nexport default withRouter(ItemForm);","import React from 'react';\n\n//tuodaan käytettävät komponentit\nimport Content from '../Content/Content';\nimport ItemForm from '../ItemForm/ItemForm';\n\n//tuodaan tyylimäärittelyt\nimport './AddItem.css';\n\n//palautetaan lomakkeelle syötetyt uuden kulun tiedot\nfunction AddItem(props) {\n    return (\n      <Content>\n\n        <div className=\"additem\">\n\n        <h2>Lisää moottoripyörän kulu</h2>\n\n        <ItemForm onFormSubmit={props.onFormSubmit} selectList={props.selectList} />\n\n        </div>\n\n      </Content>\n    );\n}\n\nexport default AddItem;","import React from 'react';\n\n//tuodaan käytettävät komponentit\nimport Content from '../Content/Content';\nimport ItemForm from '../ItemForm/ItemForm';\n\n//tuodaan tyylimäärittelyt\nimport './EditItem.css';\n\n//luodaan logiikka ja tulostus datan muokkaamiselle\nfunction EditItem(props) {\n\n    const index = props.data.findIndex(item => item.id === props.match.params.id);\n    let itemData = props.data[index];\n\n    return (\n      <Content>\n\n        <div className=\"edititem\">\n\n        <h2>Kulun muokkaaminen</h2>\n\n        <ItemForm onFormSubmit={props.onFormSubmit} selectList={props.selectList} \n                                                    data= {itemData} onDeleteItem={props.onDeleteItem}/>\n\n        </div>\n\n      </Content>\n    );\n}\n\nexport default EditItem;","import React, { Component } from 'react';\n\n//tuodaan käytettävät kirjastot\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n//tuodaan tyylimäärittelyt\nimport './App.css';\n\n//tuodaan testidata\nimport testdata from './testdata';\n\n//tuodaan sovelluksen komponentit\nimport Header from './components/Header/Header';\nimport Items from './components/Items/Items';\nimport Stats from './components/Stats/Stats';\nimport Settings from './components/Settings/Settings';\nimport Menu from './components/Menu/Menu';\nimport AddItem from './components/AddItem/AddItem';\nimport EditItem from './components/EditItem/EditItem';\n\n\nclass App extends Component {\n\n  //luodaan konstruktori datalle\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: testdata, \n      selectList: [\"Polttoaine\", \"Huolto\", \"Vakuutus\", \"Varaosat\"]\n    }\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleSelectListForm = this.handleSelectListForm.bind(this);\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n\n  //luodaan käsittelijä uuden datan lisäämiselle\n  handleFormSubmit(newdata) {\n    let storeddata = this.state.data.slice();\n    const index = storeddata.findIndex(item => item.id === newdata.id);\n    if (index >= 0) {\n      storeddata[index] = newdata;\n    } else {\n    storeddata.push(newdata);\n    }\n    storeddata.sort((a,b) => { \n      const aDate = new Date(a.kulupaiva);\n      const bDate = new Date(b.kulupaiva);\n      return bDate.getTime() - aDate.getTime();\n     } );\n    this.setState({\n      data: storeddata\n    });\n  }\n\n  //luodaan käsittelijä datan muokkaamiselle\n  handleSelectListForm (newitem) {\n    let selectList= this.state.selectList.slice();\n    selectList.push(newitem); \n    selectList.sort();\n    this.setState({\n      selectList: selectList\n    });\n  }\n\n  //luodaan käsittelijä datan poistamiselle\n  handleDeleteItem (id) {\n    let storeddata = this.state.data.slice();\n    storeddata = storeddata.filter(item => item.id !== id);\n    this.setState({\n      data: storeddata \n    });\n  }\n\n  //renderöidään Router\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route path=\"/\" exact render={() => <Items data={this.state.data} />} />\n          <Route path=\"/stats\" component={Stats} />\n          <Route path=\"/settings\" render={() => <Settings selectList={this.state.selectList} onFormSubmit={this.handleSelectListForm} /> } />\n          <Route path=\"/add\" render={() => <AddItem onFormSubmit={this.handleFormSubmit} selectList={this.state.selectList} />} />\n          <Route path=\"/edit/:id\" render={(props) => <EditItem data={this.state.data} \n                                                               selectList={this.state.selectList} \n                                                               onFormSubmit={this.handleFormSubmit} \n                                                               onDeleteItem={this.handleDeleteItem}\n                                                               {...props}/>} />\n          <Menu />\n        </div>\n      </Router>\n    );\n  }\n}\n\n//exportataan App\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}